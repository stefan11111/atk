/* This file is generated by glib-genmarshal, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */
#pragma once

#include <glib-object.h>

G_BEGIN_DECLS

/* VOID:INT,INT (../atk/atkmarshal.list:25) */
extern
void atk_marshal_VOID__INT_INT (GClosure     *closure,
                                GValue       *return_value,
                                guint         n_param_values,
                                const GValue *param_values,
                                gpointer      invocation_hint,
                                gpointer      marshal_data);

/* VOID:INT,INT,STRING (../atk/atkmarshal.list:26) */
extern
void atk_marshal_VOID__INT_INT_STRING (GClosure     *closure,
                                       GValue       *return_value,
                                       guint         n_param_values,
                                       const GValue *param_values,
                                       gpointer      invocation_hint,
                                       gpointer      marshal_data);

/* VOID:INT,INT,INT,STRING (../atk/atkmarshal.list:27) */
extern
void atk_marshal_VOID__INT_INT_INT_STRING (GClosure     *closure,
                                           GValue       *return_value,
                                           guint         n_param_values,
                                           const GValue *param_values,
                                           gpointer      invocation_hint,
                                           gpointer      marshal_data);

/* VOID:STRING,BOOLEAN (../atk/atkmarshal.list:28) */
extern
void atk_marshal_VOID__STRING_BOOLEAN (GClosure     *closure,
                                       GValue       *return_value,
                                       guint         n_param_values,
                                       const GValue *param_values,
                                       gpointer      invocation_hint,
                                       gpointer      marshal_data);

/* VOID:DOUBLE,STRING (../atk/atkmarshal.list:29) */
extern
void atk_marshal_VOID__DOUBLE_STRING (GClosure     *closure,
                                      GValue       *return_value,
                                      guint         n_param_values,
                                      const GValue *param_values,
                                      gpointer      invocation_hint,
                                      gpointer      marshal_data);


G_END_DECLS
